= Layers =

The current graphics engine works by using three layers:

== Color Layer ==

This is a normal layer, it contains just good old graphics as you would expect and is drawn as if you would draw directly to the screen.

== Light Layer ==

This layer specifies which areas of the screen are visible and which aren't. At start everything is invisible (black), to make stuff visible one uses white. One can also use other colors, red, green, etc. The light layer is later multiplied with the color layer, thus everything that is black (0) gets blended out and everything else gets lit by the color found in the light layer.

== Highlight Layer ==

The highlight layer is drawn ontop of the light layer, it is meant for lense-flares, glows and other effects that should be 100% visible all of the time and not covered by the light-layers shadow.

= 3D Sprites =

The idea behind 3D sprites is to avoid the annoying and disk-space consuming procedure of converting all animations into 2D images. This should also allow to much easier apply different skins to the models and change cloth or the like. Bone animation and ragdoll physics would be nice, but for the first few releases (or probally ever) simple keyframe animation would be enough. Bone deform animation can be exported by something like this (only code to get the actual mesh data, no file writing there): 

<pre><nowiki>import Blender
from Blender import NMesh

for i in xrange(1,30):
        Blender.Set("curframe", i)
        mesh = NMesh.GetRawFromObject("Plane")
        obj = NMesh.PutRaw(mesh)
        obj.setLocation(0, i*5, 0)
</nowiki></pre>