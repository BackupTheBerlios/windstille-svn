== Coding style ==

Far more important than the supposed advantages or disadvantages of any particular coding style is that a project consistently uses the same style across all of its source code.

In Windstille, code looks like this:

From hypothetical file class_name.cxx:

<code>
void<br>
ClassName::function_name (float delta)
{
  value -= 10*delta;
  
  std::list<Player*>* lst = get_world ()->get_players ();

  for (std::list<Player*>::iterator i = lst->begin (); i != lst->end (); ++i)
    {
      if (fabs((pos - (*i)->get_pos ()).norm ()) < 20.0f)
        {
          player_catched (*i);
          remove ();
        }
    }
}
</code>

The following rules can be deduced:

<ol>
<li>Function return types comes on a line of their own
<li>Curly braces are always on a line of their own
<li>Two spaces seperate braces from both the line above them and the line below them
<li>Class names have the first letter of each word in their name capitalised, and no underscores
<li>Variable and function names are entirely in lower case, and seperate seperate words in their name using underscores
<li>For function calls there is a space inbetween the name of the function being called and thfirst parenthesis
<li>Files are named after the classes that they contain, but use the same rules for capitalisation and underscores as variable names, not class names (i.e. all lowercase, different words within a name are seperated by an underscore)
<li>MediaWiki's automatic code formatting isn't perfect
</ol>