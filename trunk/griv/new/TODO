[[ Griv ToDo ]]

* implement fast crop
* implement linear blending scale
* move recursive directory code over
* move image sorting code on workspace over
* request lower res tiles, before requesting highres tiles
* move JPEG decoding in a seperate thread so that the database thread can run free with database stuff 
* jpegtran *can't* do crop of large scale JPEGs in small amount of
  space, so cropping with libjpeg likely won't work

JPEG Functions:
===============

* get_size(JpegImage) -> (w, h)
* crop(JpegImage)  -> JpegImage -> Blob
* Filename -> JpegImage


* multi-threading in the tile generator for multicore
* faster image handling, FreeImage is not good enough
* do something about the seams on tile borders (hard, need to save a 1px border, but that screws up the JPEG compression)
* faster incremental tile generation
* griv name is already taken

  Possible alternative names: ZoomIV, ZUIIV, VIIUZ, viuz, zoiv zoui, magzoi, gig, zuiview

* How to avoid duplicate entries in the queue?
* figure out why the thing crashes -> move viewer thread into main thread

* File stuff should really be seperate from Tile getting -> Seperate worker thread?
* need to display the thread status graphically somehow

Image Library Requirements:
===========================

* fast JPEG thumbnailing would be a plus (FreeImage, EPEG -> See jpeglib tools, transup.c)

* fast width/height reading from file header (libjpeg, libpng)

* support for PNG, JPEG, XCF, etc.

* generation of subregion images without a copy


# EOF #
